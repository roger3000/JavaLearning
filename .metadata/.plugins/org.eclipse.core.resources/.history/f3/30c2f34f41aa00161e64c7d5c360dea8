package com.eric.java.ericzone.services;

import java.util.List;
import java.util.Map;

import org.apache.poi.hssf.record.formula.functions.Count;

import com.eric.java.basecontainer.hibernate.AbstractService;
import com.eric.java.basecontainer.hibernate.exception.ServicesException;
import com.eric.java.ericzone.awares.IMLogAware;
import com.eric.java.ericzone.object.MLog;
import com.eric.java.ericzone.object.MSms;

import net.sf.hibernate.Session;
import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Query;


public class MLogService extends AbstractService implements IMLogAware{

	@Override
	public MLog insertMlog(MLog mlog) throws ServicesException {
		return (MLog) this.save(mlog);
	}

	@Override
	public List getRegionMlogListByQueryMap(Map<String, String> queryMap, String regionCode) throws ServicesException {
		Session session = this.getSession();
		try{
			String hqlstr = "from com.eric.java.ericzone.object.Mlog as mlog where mlog.mRegionCode = ? ";
			
			if(queryMap!=null && queryMap.size()>0){
				//电话号码
				if(queryMap.containsKey("mLogOptUserCode")) hqlstr += "and mlog.mLogOptUserCode = ?";
//				//姓名
//				if(queryMap.containsKey("mLogTypeName")) hqlstr += "and mlog.mLogTypeName = ?";
				//操作类型 0-查询 1-新增 2-修改 3-删除
				if(queryMap.containsKey("mLogOptType")) hqlstr += "and mlog.mLogOptType = ?";
			}
			hqlstr += "order by mlog.mLogOptTime desc";
			Query query = session.createQuery(hqlstr);
			query.setString(0, regionCode);
			if(queryMap!=null && queryMap.size()>0){
				if(queryMap.containsKey("pageSize")){
					query.setMaxResults(Integer.valueOf(queryMap.get("pageSize")));
					query.setFirstResult(Integer.valueOf(queryMap.get("pageSize")) * Integer.valueOf(queryMap.get("page")) - Integer.valueOf(queryMap.get("pageSize")));
				}
			}
			if(queryMap!=null && queryMap.size()>0){
	        	   int index = 1 ;
	               if(queryMap.containsKey("mLogOptUserCode")){
	            	   query.setString(index, queryMap.get("mLogOptUserCode"));
	            	   index++;
	               }
//	               if(queryMap.containsKey("mLogTypeName")){
//	            	   query.setString(index, queryMap.get("mLogTypeName"));
//	            	   index++;
//	               }
	               if(queryMap.containsKey("mLogOptType")){
	            	   query.setString(index, queryMap.get("mLogOptType"));
	            	   index++;
	               }               
	           }		
				List list=query.list();
	            if(list!=null && list.size()>0){
	            	return list;
	            }else{
	                return null;	
	            }
			
		}catch (HibernateException e) {
			throw new ServicesException(e.toString());
		}finally{
			this.releaseSession(session);
		}
	}

	@Override
	public MLog getMlog(Integer mId) throws ServicesException {
		return (MLog) this.load(MLog.class, mId);
	}


	@Override
	public int getRegionMlogListSizeByQueryMap(Map<String, String> queryMap, String regionCode)
			throws ServicesException {
		Session session = this.getSession();
		try{
			String hqlstr = "from com.eric.java.ericzone.object.Mlog as mlog where mlog.mRegionCode = ? ";
			
			if(queryMap!=null && queryMap.size()>0){
				//电话号码
				if(queryMap.containsKey("mLogOptUserCode")) hqlstr += "and mlog.mLogOptUserCode = ?";
//				//姓名
//				if(queryMap.containsKey("mLogTypeName")) hqlstr += "and mlog.mLogTypeName = ?";
				//操作类型 0-查询 1-新增 2-修改 3-删除
				if(queryMap.containsKey("mLogOptType")) hqlstr += "and mlog.mLogOptType = ?";
			}
			hqlstr += "order by mlog.mLogOptTime desc";
			Query query = session.createQuery(hqlstr);
			query.setString(0, regionCode);
			if(queryMap!=null && queryMap.size()>0){
				if(queryMap.containsKey("pageSize")){
					query.setMaxResults(Integer.valueOf(queryMap.get("pageSize")));
					query.setFirstResult(Integer.valueOf(queryMap.get("pageSize")) * Integer.valueOf(queryMap.get("page")) - Integer.valueOf(queryMap.get("pageSize")));
				}
			}
			if(queryMap!=null && queryMap.size()>0){
	        	   int index = 1 ;
	               if(queryMap.containsKey("mLogOptUserCode")){
	            	   query.setString(index, queryMap.get("mLogOptUserCode"));
	            	   index++;
	               }
//	               if(queryMap.containsKey("mLogTypeName")){
//	            	   query.setString(index, queryMap.get("mLogTypeName"));
//	            	   index++;
//	               }
	               if(queryMap.containsKey("mLogOptType")){
	            	   query.setString(index, queryMap.get("mLogOptType"));
	            	   index++;
	               }               
	           }		
			List list=query.list();
			int count = 0 ;
	           if(list!=null && list.size()>0){
	           	count = (Integer)list.get(0);
	           	return count;
	           }else{
	           	return 0;
	           }
			
		}catch (HibernateException e) {
			throw new ServicesException(e.toString());
		}finally{
			this.releaseSession(session);
		}
	}

}
